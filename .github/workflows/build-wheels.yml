name: Build and Publish Wheels

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build_zig_library:
    name: Build Zig Library
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
            target: x86_64-linux-gnu
          - os: macos-latest
            arch: arm64
            target: aarch64-macos-none
          - os: macos-latest
            arch: x86_64
            target: x86_64-macos-none
          - os: windows-latest
            arch: x86_64
            target: x86_64-windows-gnu
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: 0.15.1
      
      - name: Build Zig library
        run: |
          zig build -Doptimize=ReleaseFast
      
      - name: Upload Zig library artifact
        uses: actions/upload-artifact@v4
        with:
          name: zig-lib-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            zig-out/lib/libsatya.*
            zig-out/lib/satya.*
          retention-days: 1

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    needs: build_zig_library
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Download Zig library artifacts
        uses: actions/download-artifact@v4
        with:
          path: zig-artifacts
      
      - name: Copy Zig libraries to zig-out
        shell: bash
        run: |
          mkdir -p zig-out/lib
          if [ -d "zig-artifacts" ]; then
            find zig-artifacts -name "libsatya.*" -o -name "satya.*" | while read file; do
              cp "$file" zig-out/lib/ || true
            done
          fi
          ls -la zig-out/lib/ || true
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.21.3
        env:
          CIBW_BUILD: cp38-* cp39-* cp310-* cp311-* cp312-* cp313-*
          CIBW_SKIP: "*-musllinux_* *-manylinux_i686 *-win32"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_ARCHS_LINUX: "x86_64"
          CIBW_ARCHS_WINDOWS: "AMD64"
          CIBW_BEFORE_BUILD: |
            pip install setuptools wheel
          CIBW_BUILD_VERBOSITY: 1
        with:
          package-dir: ./python-bindings
          output-dir: wheelhouse
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: ./wheelhouse/*.whl
          retention-days: 7

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build sdist
        run: |
          cd python-bindings
          pip install build
          python -m build --sdist
      
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: python-bindings/dist/*.tar.gz
          retention-days: 7

  publish:
    name: Publish to PyPI
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist-all
      
      - name: Flatten dist directory
        run: |
          mkdir -p dist
          find dist-all -name "*.whl" -exec cp {} dist/ \;
          find dist-all -name "*.tar.gz" -exec cp {} dist/ \;
          ls -la dist/
      
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
